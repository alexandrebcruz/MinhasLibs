import matplotlib.pyplot as plt
import seaborn as sns
from matplotlib import animation

with sns.axes_style("whitegrid"):
    fig, ax = plt.subplots(1, 1, figsize = [10, 6])
    
def animate(i):
    qtds_plot = lista_plots[i][2]
    strings_intervalos_plot = lista_plots[i][1]
    flag_color = lista_plots[i][0]
    with sns.axes_style("whitegrid"):
        ax.cla()
        if(flag_color == 'ini_loop'):
            ax.bar(strings_intervalos_plot, qtds_plot, color = paleta_cores[1], label = 'Desvio Padrão: ' + '%.4g' % np.std(qtds_plot))
        elif(flag_color == 'fim'):
            ax.bar(strings_intervalos_plot, qtds_plot, color = paleta_cores[2], label = 'Desvio Padrão: ' + '%.4g' % np.std(qtds_plot))
        else:
            ax.bar(strings_intervalos_plot, qtds_plot, color = paleta_cores[0], label = 'Desvio Padrão: ' + '%.4g' % np.std(qtds_plot))
        ax.legend(bbox_to_anchor = (0.68, 0.93), loc='upper left')
        ax.set_xlabel('Faixa')
        ax.set_ylabel('Quantidade')
        ax.set_ylim(bottom = 0.0)
        ax.set_ylim(top = ymax)

anim = animation.FuncAnimation(fig, animate, frames = len(lista_plots), interval = 1000, blit = False, repeat = True)
plt.show()
anim.save('imagens/ilustracao_algoritmo.gif', writer = 'pillow', fps = 5)